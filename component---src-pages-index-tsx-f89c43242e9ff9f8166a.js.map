{"version":3,"file":"component---src-pages-index-tsx-f89c43242e9ff9f8166a.js","mappings":"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","sources":["webpack://hustle-dev-blog/./src/views/Home/components/Post/components/Date/Date.tsx","webpack://hustle-dev-blog/./src/views/Home/components/Post/components/Date/Date.module.css","webpack://hustle-dev-blog/./src/views/Home/components/Post/components/Description/Description.tsx","webpack://hustle-dev-blog/./src/views/Home/components/Post/components/Description/Description.module.css","webpack://hustle-dev-blog/./src/views/Home/components/Post/components/TagList/TagList.tsx","webpack://hustle-dev-blog/./src/views/Home/components/Post/components/TagList/TagList.module.css","webpack://hustle-dev-blog/./src/views/Home/components/Post/components/Title/Title.tsx","webpack://hustle-dev-blog/./src/views/Home/components/Post/components/Title/Title.module.css","webpack://hustle-dev-blog/./src/views/Home/components/Post/Post.module.css","webpack://hustle-dev-blog/./src/views/Home/components/Post/Post.tsx","webpack://hustle-dev-blog/./src/views/Home/components/PostList/PostList.tsx","webpack://hustle-dev-blog/./src/views/Home/components/PostList/PostList.module.css","webpack://hustle-dev-blog/./src/views/Home/components/RecentPost/RecentPost.tsx","webpack://hustle-dev-blog/./src/views/Home/components/RecentPost/RecentPost.module.css","webpack://hustle-dev-blog/./src/views/Home/components/TagButtonWithCount/TagButtonWithCount.tsx","webpack://hustle-dev-blog/./src/views/Home/components/TagButtonWithCount/TagButtonWithCount.module.css","webpack://hustle-dev-blog/./src/views/Home/components/TagList/TagList.tsx","webpack://hustle-dev-blog/./src/views/Home/components/TagList/TagList.module.css","webpack://hustle-dev-blog/./src/views/Home/constants/Tag.ts","webpack://hustle-dev-blog/./src/views/Home/Home.tsx","webpack://hustle-dev-blog/./src/views/Home/hooks/useTag.tsx","webpack://hustle-dev-blog/./src/views/Home/hooks/usePostInfiniteScroll.tsx","webpack://hustle-dev-blog/./src/views/Home/Home.module.css","webpack://hustle-dev-blog/./src/pages/index.tsx"],"sourcesContent":["import React from 'react'\nimport clsx from 'clsx'\nimport * as styles from './Date.module.css'\n\ntype DateProps = {\n  date: string\n  className?: string\n}\n\nexport const Date = ({ date, className }: DateProps) => <h3 className={clsx(styles.date, className)}>{date}</h3>\n","// extracted by mini-css-extract-plugin\nexport var date = \"Date-module--date--d4fbd\";","import React from 'react'\nimport clsx from 'clsx'\nimport * as styles from './Description.module.css'\n\ntype DescriptionProps = {\n  description: string\n  className?: string\n}\n\nexport const Description = ({ description, className }: DescriptionProps) => (\n  <p className={clsx(styles.description, className)}>{description}</p>\n)\n","// extracted by mini-css-extract-plugin\nexport var description = \"Description-module--description--9ea1f\";","import React from 'react'\nimport clsx from 'clsx'\nimport { Tag } from '@/components'\nimport * as styles from './TagList.module.css'\n\ntype TagListProps = {\n  tags: readonly string[]\n  className?: string\n}\n\nexport const TagList = ({ tags, className }: TagListProps) => (\n  <ul className={clsx(styles.tagList, className)}>\n    {tags.map((tag) => (\n      <Tag key={tag} name={tag} />\n    ))}\n  </ul>\n)\n","// extracted by mini-css-extract-plugin\nexport var tagList = \"TagList-module--tagList--d5cc6\";","import React from 'react'\nimport clsx from 'clsx'\nimport * as styles from './Title.module.css'\n\ntype TitleProps = {\n  title: string\n  className?: string\n}\n\nexport const Title = ({ title, className }: TitleProps) => <h3 className={clsx(styles.title, className)}>{title}</h3>\n","// extracted by mini-css-extract-plugin\nexport var title = \"Title-module--title--3663c\";","// extracted by mini-css-extract-plugin\nexport var articleLink = \"Post-module--articleLink--d1094\";\nexport var card = \"Post-module--card--c936a\";\nexport var cardCaption = \"Post-module--cardCaption--b686f\";\nexport var cardDate = \"Post-module--cardDate--b072f\";\nexport var cardDescription = \"Post-module--cardDescription--9c3c1\";\nexport var cardImage = \"Post-module--cardImage--37335\";\nexport var cardTagList = \"Post-module--cardTagList--d2f12\";\nexport var cardTitle = \"Post-module--cardTitle--31c4d\";\nexport var item = \"Post-module--item--25f91\";\nexport var itemCaption = \"Post-module--itemCaption--04590\";\nexport var itemDate = \"Post-module--itemDate--dd369\";\nexport var itemDescription = \"Post-module--itemDescription--8c7de\";\nexport var itemFigure = \"Post-module--itemFigure--894b5\";\nexport var itemImage = \"Post-module--itemImage--0bdef\";\nexport var itemTitle = \"Post-module--itemTitle--5b5c6\";","import { Link } from 'gatsby'\nimport { GatsbyImage, type IGatsbyImageData } from 'gatsby-plugin-image'\nimport React from 'react'\nimport clsx from 'clsx'\nimport { match } from 'ts-pattern'\nimport { getRefinedImage } from '@/utils'\nimport { Date, Description, TagList, Title } from './components'\nimport * as styles from './Post.module.css'\nimport * as typo from '@/styles/typography.module.css'\n\ntype PostProps = {\n  variants: 'card' | 'item'\n  title: string\n  description: string\n  date: string\n  tags: readonly string[]\n  slug: string\n  heroImage: IGatsbyImageData | undefined\n  heroImageAlt: string\n}\n\nexport const Post = ({ variants, title, description, date, tags, slug, heroImage, heroImageAlt }: PostProps) => {\n  const image = getRefinedImage(heroImage)\n\n  return (\n    <Link to={`/posts${slug}`} className={styles.articleLink}>\n      {match(variants)\n        .with('card', () => (\n          <article className={styles.card}>\n            <figure>\n              <GatsbyImage image={image} alt={heroImageAlt} className={styles.cardImage} />\n              <figcaption className={styles.cardCaption}>\n                <Date date={date} className={clsx(styles.cardDate, typo.B7)} />\n                <TagList tags={tags} className={styles.cardTagList} />\n                <Title title={title} className={clsx(styles.cardTitle, typo.H1)} />\n                <Description description={description} className={clsx(styles.cardDescription, typo.B5)} />\n              </figcaption>\n            </figure>\n          </article>\n        ))\n        .with('item', () => (\n          <article className={styles.item}>\n            <figure className={styles.itemFigure}>\n              <GatsbyImage image={image} alt={heroImageAlt} className={styles.itemImage} />\n              <figcaption className={styles.itemCaption}>\n                <TagList tags={tags} />\n                <Title title={title} className={clsx(styles.itemTitle, typo.T1)} />\n                <Description description={description} className={clsx(styles.itemDescription, typo.B5)} />\n                <Date date={date} className={clsx(styles.itemDate, typo.B6)} />\n              </figcaption>\n            </figure>\n          </article>\n        ))\n        .exhaustive()}\n    </Link>\n  )\n}\n","import React from 'react'\nimport clsx from 'clsx'\nimport { Post } from '../Post'\nimport * as styles from './PostList.module.css'\n\ntype PostListProps = {\n  posts: Queries.HomeQuery['allMarkdownRemark']['nodes']\n  className?: string\n}\n\nexport const PostList = ({ posts, className }: PostListProps) => {\n  return (\n    <ul className={clsx(styles.postList, className)}>\n      {posts.map(({ frontmatter: { title, description, date, tags, slug, heroImage, heroImageAlt }, id }) => (\n        <Post\n          key={id}\n          variants=\"item\"\n          title={title}\n          description={description}\n          date={date}\n          tags={tags}\n          slug={slug}\n          heroImage={heroImage?.childImageSharp?.gatsbyImageData}\n          heroImageAlt={heroImageAlt}\n        />\n      ))}\n    </ul>\n  )\n}\n","// extracted by mini-css-extract-plugin\nexport var postList = \"PostList-module--postList--f7183\";","import React from 'react'\nimport clsx from 'clsx'\nimport { Post } from '../Post'\nimport * as styles from './RecentPost.module.css'\nimport * as typo from '@/styles/typography.module.css'\n\ntype RecentPostProps = {\n  posts: Queries.HomeQuery['allMarkdownRemark']['nodes']\n}\n\nexport const RecentPost = ({ posts }: RecentPostProps) => (\n  <>\n    <h2 className={clsx(styles.heading, typo.T2)}>New posts 📑</h2>\n    <ul className={styles.recentPostList}>\n      {posts.map(({ frontmatter: { title, description, date, tags, slug, heroImage, heroImageAlt }, id }) => (\n        <Post\n          key={id}\n          variants=\"card\"\n          title={title}\n          description={description}\n          date={date}\n          tags={tags}\n          slug={slug}\n          heroImage={heroImage?.childImageSharp?.gatsbyImageData}\n          heroImageAlt={heroImageAlt}\n        />\n      ))}\n    </ul>\n  </>\n)\n","// extracted by mini-css-extract-plugin\nexport var heading = \"RecentPost-module--heading--e35dd\";\nexport var recentPostList = \"RecentPost-module--recentPostList--d076e\";","import React from 'react'\nimport clsx from 'clsx'\nimport * as styles from './TagButtonWithCount.module.css'\nimport * as typo from '@/styles/typography.module.css'\n\ntype TagButtonWithCountProps = {\n  name: string\n  count: number\n  onClick?: () => void\n  isSelected: boolean\n}\n\nexport const TagButtonWithCount = ({ name, count, isSelected, onClick }: TagButtonWithCountProps) => (\n  <button onClick={onClick} className={clsx(styles.tagButton, { [styles.active]: isSelected })}>\n    <span className={typo.B5}>\n      {name} ({count})\n    </span>\n  </button>\n)\n","// extracted by mini-css-extract-plugin\nexport var active = \"TagButtonWithCount-module--active--41c40\";\nexport var tagButton = \"TagButtonWithCount-module--tagButton--64c99\";","import React from 'react'\nimport type { KeyboardEvent, MouseEvent } from 'react'\nimport clsx from 'clsx'\nimport { TagButtonWithCount } from '../TagButtonWithCount'\nimport { getRefinedStringValue } from '@/utils'\nimport * as styles from './TagList.module.css'\n\ntype TagListProps = {\n  tags: { fieldValue: string | null; totalCount: number }[]\n  selectedTag: string\n  clickTag: (e: MouseEvent<HTMLElement> | KeyboardEvent<HTMLElement>) => void\n  className?: string\n}\n\nexport const TagList = ({ tags, selectedTag, clickTag, className }: TagListProps) => (\n  <ul\n    className={clsx(styles.tagList, className)}\n    onClick={(e) => clickTag(e)}\n    onKeyDown={(e) => clickTag(e)}\n    role=\"presentation\"\n  >\n    {tags.map(({ fieldValue, totalCount }) => {\n      const value = getRefinedStringValue(fieldValue)\n\n      return (\n        <li key={value} className={styles.tagItem} data-tag={value}>\n          <TagButtonWithCount name={value} count={totalCount} isSelected={selectedTag === value} />\n        </li>\n      )\n    })}\n  </ul>\n)\n","// extracted by mini-css-extract-plugin\nexport var tagItem = \"TagList-module--tagItem--6c929\";\nexport var tagList = \"TagList-module--tagList--bf40d\";","export const TAGS = {\n  ALL: 'All',\n} as const\n","import type { PageProps } from 'gatsby'\nimport React from 'react'\nimport { PostList, RecentPost, TagList } from './components'\nimport { usePostInfiniteScroll, useTag } from './hooks'\nimport { FloatingButton, ProfileCard } from '@/components'\nimport * as styles from './Home.module.css'\n\nconst Home = ({ data, location: { pathname } }: PageProps<Queries.HomeQuery>) => {\n  const { nodes: allPosts, totalCount, group } = data.allMarkdownRemark\n  const recentPosts = allPosts.slice(0, 2)\n  const { tags, selectedTag, clickTag } = useTag(totalCount, group)\n  const { visiblePosts } = usePostInfiniteScroll(allPosts, selectedTag, totalCount)\n\n  return (\n    <main className={styles.main}>\n      <aside className={styles.aside}>\n        <ProfileCard pathname={pathname} />\n      </aside>\n      <div className={styles.shrinkSpace}></div>\n      <section className={styles.wrapper}>\n        <RecentPost posts={recentPosts} />\n        <hr className={styles.divider}></hr>\n        <TagList tags={tags} selectedTag={selectedTag} clickTag={clickTag} className={styles.tagList} />\n        <PostList posts={visiblePosts} className={styles.postList} />\n      </section>\n      <FloatingButton />\n    </main>\n  )\n}\n\nexport default Home\n","import { useCallback, useMemo, useState } from 'react'\nimport type { KeyboardEvent, MouseEvent } from 'react'\nimport { TAGS } from '../constants'\n\nexport const useTag = (totalCount: number, group: Queries.HomeQuery['allMarkdownRemark']['group']) => {\n  const tags = useMemo(\n    () => [{ fieldValue: TAGS.ALL, totalCount }, ...group].sort((a, b) => b.totalCount - a.totalCount),\n    [group, totalCount]\n  )\n  const [selectedTag, setSelectedTag] = useState<string>(TAGS.ALL)\n  const clickTag = useCallback(({ target }: MouseEvent<HTMLElement> | KeyboardEvent<HTMLElement>) => {\n    if (!(target instanceof HTMLElement)) return\n    const $tagItem = target.closest('li')\n    if (!$tagItem) return\n    $tagItem?.dataset.tag && setSelectedTag($tagItem.dataset.tag)\n  }, [])\n\n  return { tags, selectedTag, clickTag }\n}\n","import { useEffect, useMemo, useState } from 'react'\nimport { TAGS } from '../constants'\nimport { $ } from '@/utils'\n\nexport const usePostInfiniteScroll = (\n  allPosts: Queries.HomeQuery['allMarkdownRemark']['nodes'],\n  selectedTag: string,\n  totalCount: number\n) => {\n  const posts = useMemo(\n    () => allPosts.filter(({ frontmatter: { tags } }) => selectedTag === TAGS.ALL || tags.includes(selectedTag)),\n    [allPosts, selectedTag]\n  )\n  const [displayedItems, setDisplayedItems] = useState(8)\n  const visiblePosts = posts.slice(0, displayedItems)\n\n  useEffect(() => {\n    const observer = new IntersectionObserver(\n      (entries) => {\n        if (!entries[0].isIntersecting) return\n\n        if (displayedItems <= totalCount) {\n          setDisplayedItems((prev) => prev + 8)\n        } else {\n          observer.disconnect()\n        }\n      },\n      { threshold: 0 }\n    )\n    observer.observe($<HTMLElement>('footer'))\n    return () => observer.disconnect()\n  }, [displayedItems, totalCount])\n\n  return { visiblePosts }\n}\n","// extracted by mini-css-extract-plugin\nexport var aside = \"Home-module--aside--85fdc\";\nexport var divider = \"Home-module--divider--1e899\";\nexport var main = \"Home-module--main--c9d7f\";\nexport var postList = \"Home-module--postList--2b55e\";\nexport var shrinkSpace = \"Home-module--shrinkSpace--62acc\";\nexport var tagList = \"Home-module--tagList--14f89\";\nexport var wrapper = \"Home-module--wrapper--b5449\";","import React from 'react'\nimport { Seo } from '@/components'\nimport { graphql, type HeadProps } from 'gatsby'\nimport { getRefinedStringValue } from '@/utils'\nexport const query = graphql`\n  query Home {\n    allMarkdownRemark(sort: { frontmatter: { date: DESC } }) {\n      totalCount\n      nodes {\n        frontmatter {\n          tags\n          slug\n          description\n          date(formatString: \"YY.MM.DD\")\n          title\n          heroImage {\n            childImageSharp {\n              gatsbyImageData(placeholder: BLURRED)\n            }\n          }\n          heroImageAlt\n        }\n        id\n      }\n      group(field: { frontmatter: { tags: SELECT } }) {\n        fieldValue\n        totalCount\n      }\n    }\n    site {\n      siteMetadata {\n        siteUrl\n        description\n        title\n        keywords\n      }\n    }\n    file(relativePath: { eq: \"blogImage.png\" }) {\n      publicURL\n    }\n  }\n`\n\nexport const Head = ({ location: { pathname }, data: { site, file } }: HeadProps<Queries.HomeQuery>) => {\n  const seo = {\n    title: site?.siteMetadata.title,\n    description: site?.siteMetadata.description,\n    heroImage: getRefinedStringValue(file?.publicURL),\n  }\n\n  return <Seo title={seo.title} description={seo.description} heroImage={seo.heroImage} pathname={pathname}></Seo>\n}\n\nexport { default } from '../views/Home'\n"],"names":["Date","_ref","date","className","React","clsx","Description","description","TagList","tags","map","tag","Tag","key","name","Title","title","Post","variants","slug","heroImage","heroImageAlt","image","getRefinedImage","Link","to","match","with","GatsbyImage","alt","typo","exhaustive","PostList","posts","_ref2","_heroImage$childImage","frontmatter","id","childImageSharp","gatsbyImageData","RecentPost","TagButtonWithCount","count","isSelected","onClick","selectedTag","clickTag","e","onKeyDown","role","fieldValue","totalCount","value","getRefinedStringValue","TAGS","ALL","data","location","pathname","nodes","allPosts","group","allMarkdownRemark","recentPosts","slice","useTag","useMemo","concat","_toConsumableArray","sort","a","b","setSelectedTag","useState","useCallback","target","HTMLElement","$tagItem","closest","dataset","visiblePosts","usePostInfiniteScroll","filter","includes","displayedItems","setDisplayedItems","useEffect","observer","IntersectionObserver","entries","isIntersecting","prev","disconnect","threshold","observe","$","ProfileCard","FloatingButton","Head","site","file","seo","siteMetadata","publicURL","Seo"],"sourceRoot":""}