{"version":3,"file":"component---src-pages-posts-markdown-remark-frontmatter-slug-tsx-f96da7790400ac6c10b0.js","mappings":"0OAOA,MAqEaA,EAAOC,IAAwF,IAAAC,EAAA,IAArFC,MAAM,eAAEC,GAAkBC,UAAU,SAAEC,IAA0CL,EACrG,MAAMM,EAAM,CACVC,MAAOJ,aAAc,EAAdA,EAAgBK,YAAYD,MACnCE,YAAaN,aAAc,EAAdA,EAAgBK,YAAYC,YACzCC,UAAWP,aAAc,EAAdA,EAAgBK,YAAYE,WAGzC,OACEC,EAAAA,cAACC,EAAAA,GAAG,CACFL,MAAOD,EAAIC,MACXE,YAAaH,EAAIG,YACjBC,WAAWG,EAAAA,EAAAA,GAAoC,QAA9BZ,EAACK,EAAII,UAAUI,uBAAe,IAAAb,OAAA,EAA7BA,EAA+Bc,iBACjDV,SAAUA,GACL,EAIX,MAtFyBW,IAAoE,IAAAC,EAAAC,EAAAC,EAAAC,EAAA,IAAnE,KAAElB,EAAME,UAAU,SAAEC,IAA0CW,EACtF,MAAM,MAAET,EAAK,KAAEc,EAAI,KAAEC,EAAI,UAAEZ,EAAS,aAAEa,GAAoC,QAAtBN,EAAGf,EAAKC,sBAAc,IAAAc,OAAA,EAAnBA,EAAqBT,YAE5E,OACEG,EAAAA,cAAAA,EAAAA,SAAA,KACEA,EAAAA,cAAA,OAAKa,UCLe,qCDMpBb,EAAAA,cAAA,QAAMa,UCHS,+BDIbb,EAAAA,cAAA,MAAIc,MAAOC,EAAAA,EAAAA,GAASF,UCLT,6BDMRjB,GAEHI,EAAAA,cAAA,KAAGc,MAAOC,EAAAA,EAAAA,GAASF,UCdT,4BDePH,GAEHV,EAAAA,cAAA,MAAIa,UCZS,+BDaVF,EAAKK,KAAKC,GACTjB,EAAAA,cAACkB,EAAAA,GAAG,CACFC,IAAKF,EACLH,MAAO,CACLM,QAAS,iBACTC,gBAAiB,eAEnBC,KAAML,OAIZjB,EAAAA,cAACuB,EAAAA,EAAW,CACVC,OAAOC,EAAAA,EAAAA,GAAS1B,SAA0B,QAAjBQ,EAATR,EAAWI,uBAAe,IAAAI,OAAjB,EAATA,EAA4BH,iBAC5CsB,IAAKd,EACLC,UC9Ba,gCD+Bbc,UAAU,YAEZ3B,EAAAA,cAAA,OAAKa,UCpCe,sCDqClBb,EAAAA,cAAA,WACEa,UClCU,+BDmCVe,wBAAyB,CAAEC,OAA2B,QAArBrB,EAAEjB,EAAKC,sBAAc,IAAAgB,OAAA,EAAnBA,EAAqBsB,QAE1D9B,EAAAA,cAAC+B,EAAAA,GAAe,CAACD,KAAyB,QAArBrB,EAAElB,EAAKC,sBAAc,IAAAiB,OAAA,EAAnBA,EAAqBuB,mBAE9ChC,EAAAA,cAAA,MAAIa,UCzCS,gCD0Cbb,EAAAA,cAAA,WAASa,UC7CA,2BD8CPb,EAAAA,cAACiC,EAAAA,GAAW,CAACvC,SAAUA,KAEzBM,EAAAA,cAACkC,EAAAA,GAAM,OAER,C","sources":["webpack://hustle-dev-blog/./src/pages/posts/{markdownRemark.frontmatter__slug}.tsx","webpack://hustle-dev-blog/./src/pages/posts/Post.module.css"],"sourcesContent":["import { graphql, HeadProps, PageProps } from 'gatsby';\nimport { GatsbyImage, getImage, getSrc, IGatsbyImageData } from 'gatsby-plugin-image';\nimport React from 'react';\nimport { Giscus, ProfileCard, Seo, TableOfContents, Tag } from '@components';\nimport * as styles from './Post.module.css';\nimport { TYPO } from '@styles';\n\nconst BlogPostTemplate = ({ data, location: { pathname } }: PageProps<Queries.PostQuery>) => {\n  const { title, date, tags, heroImage, heroImageAlt } = data.markdownRemark?.frontmatter!;\n\n  return (\n    <>\n      <div className={styles.pseudoHeader}></div>\n      <main className={styles.wrapper}>\n        <h1 style={TYPO.D2} className={styles.title}>\n          {title}\n        </h1>\n        <p style={TYPO.B7} className={styles.date}>\n          {date}\n        </p>\n        <ul className={styles.tagList}>\n          {tags.map((tag) => (\n            <Tag\n              key={tag}\n              style={{\n                padding: '3px 12.5px 6px',\n                backgroundColor: 'transparent',\n              }}\n              name={tag}\n            ></Tag>\n          ))}\n        </ul>\n        <GatsbyImage\n          image={getImage(heroImage?.childImageSharp?.gatsbyImageData!) as IGatsbyImageData}\n          alt={heroImageAlt}\n          className={styles.heroImage}\n          objectFit=\"contain\"\n        />\n        <div className={styles.contentWrapper}>\n          <section\n            className={styles.mainText}\n            dangerouslySetInnerHTML={{ __html: data.markdownRemark?.html! }}\n          ></section>\n          <TableOfContents html={data.markdownRemark?.tableOfContents!}></TableOfContents>\n        </div>\n        <hr className={styles.divider} />\n        <section className={styles.bio}>\n          <ProfileCard pathname={pathname} />\n        </section>\n        <Giscus />\n      </main>\n    </>\n  );\n};\n\nexport const query = graphql`\n  query Post($id: String) {\n    markdownRemark(id: { eq: $id }) {\n      html\n      frontmatter {\n        date(formatString: \"YY.MM.DD\")\n        description\n        heroImage {\n          childImageSharp {\n            gatsbyImageData(placeholder: BLURRED)\n          }\n        }\n        heroImageAlt\n        tags\n        title\n      }\n      tableOfContents\n    }\n  }\n`;\n\nexport const Head = ({ data: { markdownRemark }, location: { pathname } }: HeadProps<Queries.PostQuery>) => {\n  const seo = {\n    title: markdownRemark?.frontmatter.title,\n    description: markdownRemark?.frontmatter.description,\n    heroImage: markdownRemark?.frontmatter.heroImage!,\n  };\n\n  return (\n    <Seo\n      title={seo.title}\n      description={seo.description}\n      heroImage={getSrc(seo.heroImage.childImageSharp?.gatsbyImageData!)}\n      pathname={pathname}\n    ></Seo>\n  );\n};\n\nexport default BlogPostTemplate;\n","// extracted by mini-css-extract-plugin\nexport var bio = \"Post-module--bio--bb2f5\";\nexport var contentWrapper = \"Post-module--contentWrapper--8e7cf\";\nexport var date = \"Post-module--date--d2b2a\";\nexport var divider = \"Post-module--divider--b8bd5\";\nexport var heroImage = \"Post-module--heroImage--0251e\";\nexport var mainText = \"Post-module--mainText--a9a8b\";\nexport var pseudoHeader = \"Post-module--pseudoHeader--a423d\";\nexport var tagList = \"Post-module--tagList--38295\";\nexport var title = \"Post-module--title--f1a94\";\nexport var wrapper = \"Post-module--wrapper--d25de\";"],"names":["Head","_ref2","_seo$heroImage$childI","data","markdownRemark","location","pathname","seo","title","frontmatter","description","heroImage","React","Seo","getSrc","childImageSharp","gatsbyImageData","_ref","_data$markdownRemark","_heroImage$childImage","_data$markdownRemark2","_data$markdownRemark3","date","tags","heroImageAlt","className","style","TYPO","map","tag","Tag","key","padding","backgroundColor","name","GatsbyImage","image","getImage","alt","objectFit","dangerouslySetInnerHTML","__html","html","TableOfContents","tableOfContents","ProfileCard","Giscus"],"sourceRoot":""}